{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ctlyn\\\\event_manager_frontend\\\\src\\\\components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getEvents, deleteEvent, updateEvent } from \"../api\"; // Assuming updateEvent is already defined in your api\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = ({\n  onSelect\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [editingEventId, setEditingEventId] = useState(null);\n  const [eventData, setEventData] = useState({\n    title: \"\",\n    description: \"\",\n    date: \"\"\n  });\n  useEffect(() => {\n    getEvents().then(res => setEvents(res.data));\n  }, []);\n  const handleDelete = id => {\n    deleteEvent(id).then(() => setEvents(events.filter(event => event.id !== id)));\n  };\n  const handleEdit = event => {\n    setEditingEventId(event.id); // Set the event being edited\n    setEventData({\n      title: event.title,\n      description: event.description,\n      date: event.date\n    });\n  };\n  const handleUpdate = id => {\n    updateEvent(id, eventData).then(updatedEvent => {\n      setEvents(events.map(event => event.id === id ? updatedEvent : event));\n      setEditingEventId(null); // Reset editing state\n    }).catch(error => {\n      console.error(\"Error updating event:\", error);\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEventData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"event-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [event.title, \" - \", new Date(event.date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onSelect(event),\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(event.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(event),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), editingEventId === event.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-update-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: eventData.title,\n            onChange: handleChange,\n            placeholder: \"Event Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: eventData.description,\n            onChange: handleChange,\n            placeholder: \"Event Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            name: \"date\",\n            value: eventData.date,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdate(event.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            onClick: () => setEditingEventId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(EventList, \"xXM4DlmitWYnEW3ecCLwg4dGC0M=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useEffect","useState","getEvents","deleteEvent","updateEvent","jsxDEV","_jsxDEV","EventList","onSelect","_s","events","setEvents","editingEventId","setEditingEventId","eventData","setEventData","title","description","date","then","res","data","handleDelete","id","filter","event","handleEdit","handleUpdate","updatedEvent","map","catch","error","console","handleChange","e","name","value","target","prevData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleString","onClick","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ctlyn/event_manager_frontend/src/components/EventList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getEvents, deleteEvent, updateEvent } from \"../api\"; // Assuming updateEvent is already defined in your api\r\n\r\nconst EventList = ({ onSelect }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [editingEventId, setEditingEventId] = useState(null);\r\n  const [eventData, setEventData] = useState({ title: \"\", description: \"\", date: \"\" });\r\n\r\n  useEffect(() => {\r\n    getEvents().then((res) => setEvents(res.data));\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    deleteEvent(id).then(() => setEvents(events.filter((event) => event.id !== id)));\r\n  };\r\n\r\n  const handleEdit = (event) => {\r\n    setEditingEventId(event.id); // Set the event being edited\r\n    setEventData({\r\n      title: event.title,\r\n      description: event.description,\r\n      date: event.date,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    updateEvent(id, eventData)\r\n      .then((updatedEvent) => {\r\n        setEvents(events.map((event) => (event.id === id ? updatedEvent : event)));\r\n        setEditingEventId(null); // Reset editing state\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating event:\", error);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEventData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-list-container\">\r\n      <h2>Events</h2>\r\n      <ul>\r\n        {events.map((event) => (\r\n          <li key={event.id} className=\"event-item\">\r\n            <div>\r\n              {event.title} - {new Date(event.date).toLocaleString()}\r\n            </div>\r\n            <div>\r\n              <button onClick={() => onSelect(event)}>View</button>\r\n              <button onClick={() => handleDelete(event.id)}>Delete</button>\r\n              <button onClick={() => handleEdit(event)}>Update</button>\r\n            </div>\r\n\r\n            {/* Show Update Form if the event is being edited */}\r\n            {editingEventId === event.id && (\r\n              <div className=\"event-update-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  value={eventData.title}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Event Title\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={eventData.description}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Event Description\"\r\n                />\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"date\"\r\n                  value={eventData.date}\r\n                  onChange={handleChange}\r\n                />\r\n                <button onClick={() => handleUpdate(event.id)}>Save</button>\r\n                <button className=\"cancel\" onClick={() => setEditingEventId(null)}>Cancel</button>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}